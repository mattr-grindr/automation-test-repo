name: Cherry-Pick to Master

on:
  pull_request:
    types:
      - labeled

jobs:
  cherry-pick:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event.label.name == 'CherryPickForRelease'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Set up Git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Cherry-pick commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
          export PR_BRANCH=$(echo ${{ github.event.pull_request.head.ref }})
          git fetch origin $PR_BRANCH:$PR_BRANCH
          export COMMIT_HASH=$(git rev-parse $PR_BRANCH)
          git checkout main
          git pull origin main
          git checkout -b cherry-pick-$PR_NUMBER
          
          # Check if the commit is a merge commit
          if [ $(git cat-file -p $COMMIT_HASH | grep -c ^parent) -gt 1 ]; then
            echo "Merge commit detected, using -m option for cherry-pick."
            git cherry-pick -m 1 $COMMIT_HASH
          else
            git cherry-pick $COMMIT_HASH
          fi
          
          git push origin cherry-pick-$PR_NUMBER

      - name: Create a pull request to main
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: 'main'
          commit-message: 'Cherry-pick PR #${{ github.event.pull_request.number }} to main'
          branch: 'cherry-pick-${{ github.event.pull_request.number }}'
          title: 'Cherry-pick PR #${{ github.event.pull_request.number }} to main'
          body: 'This PR cherry-picks commit from PR #${{ github.event.pull_request.number }} to the main branch.'

      - name: Create a PR comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            github.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: `The commit has been cherry-picked to the main branch.`
            });
